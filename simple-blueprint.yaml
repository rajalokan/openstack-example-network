tosca_definitions_version: cloudify_dsl_1_3

description: >
  Create an Example Openstack Network.

imports:
  - http://www.getcloudify.org/spec/cloudify/4.3.2/types.yaml
  - plugin:cloudify-openstack-plugin

  - inputs/openstack_inputs.yaml
  - inputs/inputs.yaml


dsl_definitions:

  client_config: &client_config
    username: { get_input: keystone_username }
    password: { get_input: keystone_password }
    auth_url: { get_input: keystone_url }
    user_domain_name: { get_input: keystone_user_domain_name }
    project_name: { get_input: keystone_project_name }
    project_domain_name: { get_input: keystone_project_domain_name }
    region: { get_input: region }


node_templates:

  private_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *client_config
      subnet:
        ip_version: 4
        cidr: { get_input: private_subnet_cidr }
        dns_nameservers: { get_input: nameservers }
        allocation_pools: { get_input: private_subnet_allocation_pools }
    relationships:
    - type: cloudify.relationships.contained_in
      target: private_network
    - type: cloudify.openstack.subnet_connected_to_router
      target: public_network_router

  private_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *client_config

  #-----------------------------------------------------------------------------

  public_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *client_config
      use_external_resource: true
      resource_id: { get_input: public_subnet_name }
    relationships:
    - type: cloudify.relationships.contained_in
      target: public_network
    - type: cloudify.openstack.subnet_connected_to_router
      target: public_network_router

  public_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *client_config
      use_external_resource: true
      resource_id: { get_input: public_network_name }

  public_network_router:
    type: cloudify.openstack.nodes.Router
    properties:
      openstack_config: *client_config
      use_external_resource: true
      resource_id: { get_input: public_router_name }
    relationships:
      - type: cloudify.relationships.connected_to
        target: external_network

  external_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *client_config
      use_external_resource: true
      resource_id: { get_input: external_network_name }

  #-----------------------------------------------------------------------------

outputs:

  external_network:
    value: { get_attribute: [ external_network, external_id ] }

  public_network_router:
    value: { get_attribute: [ public_network_router, external_id ] }

  public_network:
    value: { get_attribute: [ public_network, external_id ] }

  public_subnet:
    value: { get_attribute: [ public_subnet, external_id ] }

  private_network:
    value: { get_attribute: [ private_network, external_id ] }

  private_subnet:
    value: { get_attribute: [ private_subnet, external_id ] }
